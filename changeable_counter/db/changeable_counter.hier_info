|changeable_counter
clk => breath_flag.CLK
clk => breath_cnt2[0].CLK
clk => breath_cnt2[1].CLK
clk => breath_cnt2[2].CLK
clk => breath_cnt2[3].CLK
clk => breath_cnt2[4].CLK
clk => breath_cnt2[5].CLK
clk => breath_cnt2[6].CLK
clk => breath_cnt2[7].CLK
clk => breath_cnt2[8].CLK
clk => breath_cnt2[9].CLK
clk => breath_cnt2[10].CLK
clk => breath_cnt2[11].CLK
clk => breath_cnt2[12].CLK
clk => breath_cnt2[13].CLK
clk => breath_cnt2[14].CLK
clk => breath_cnt2[15].CLK
clk => breath_cnt2[16].CLK
clk => breath_cnt2[17].CLK
clk => breath_cnt2[18].CLK
clk => breath_cnt2[19].CLK
clk => breath_cnt2[20].CLK
clk => breath_cnt2[21].CLK
clk => breath_cnt2[22].CLK
clk => breath_cnt2[23].CLK
clk => breath_cnt2[24].CLK
clk => breath_cnt1[0].CLK
clk => breath_cnt1[1].CLK
clk => breath_cnt1[2].CLK
clk => breath_cnt1[3].CLK
clk => breath_cnt1[4].CLK
clk => breath_cnt1[5].CLK
clk => breath_cnt1[6].CLK
clk => breath_cnt1[7].CLK
clk => breath_cnt1[8].CLK
clk => breath_cnt1[9].CLK
clk => breath_cnt1[10].CLK
clk => breath_cnt1[11].CLK
clk => breath_cnt1[12].CLK
clk => breath_cnt1[13].CLK
clk => breath_cnt1[14].CLK
clk => breath_cnt1[15].CLK
clk => breath_cnt1[16].CLK
clk => breath_cnt1[17].CLK
clk => breath_cnt1[18].CLK
clk => breath_cnt1[19].CLK
clk => breath_cnt1[20].CLK
clk => breath_cnt1[21].CLK
clk => breath_cnt1[22].CLK
clk => breath_cnt1[23].CLK
clk => breath_cnt1[24].CLK
clk => clk_divided.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => cnt[16].CLK
clk => cnt[17].CLK
clk => cnt[18].CLK
clk => cnt[19].CLK
clk => cnt[20].CLK
clk => cnt[21].CLK
clk => cnt[22].CLK
clk => cnt[23].CLK
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => cnt.OUTPUTSELECT
rst => clk_divided.OUTPUTSELECT
rst => zero_flag.OUTPUTSELECT
rst => breath_cnt1[0].ACLR
rst => breath_cnt1[1].ACLR
rst => breath_cnt1[2].ACLR
rst => breath_cnt1[3].ACLR
rst => breath_cnt1[4].ACLR
rst => breath_cnt1[5].ACLR
rst => breath_cnt1[6].ACLR
rst => breath_cnt1[7].ACLR
rst => breath_cnt1[8].ACLR
rst => breath_cnt1[9].ACLR
rst => breath_cnt1[10].ACLR
rst => breath_cnt1[11].ACLR
rst => breath_cnt1[12].ACLR
rst => breath_cnt1[13].ACLR
rst => breath_cnt1[14].ACLR
rst => breath_cnt1[15].ACLR
rst => breath_cnt1[16].ACLR
rst => breath_cnt1[17].ACLR
rst => breath_cnt1[18].ACLR
rst => breath_cnt1[19].ACLR
rst => breath_cnt1[20].ACLR
rst => breath_cnt1[21].ACLR
rst => breath_cnt1[22].ACLR
rst => breath_cnt1[23].ACLR
rst => breath_cnt1[24].ACLR
rst => breath_flag.ACLR
rst => breath_cnt2[0].ACLR
rst => breath_cnt2[1].ACLR
rst => breath_cnt2[2].ACLR
rst => breath_cnt2[3].ACLR
rst => breath_cnt2[4].ACLR
rst => breath_cnt2[5].ACLR
rst => breath_cnt2[6].ACLR
rst => breath_cnt2[7].ACLR
rst => breath_cnt2[8].ACLR
rst => breath_cnt2[9].ACLR
rst => breath_cnt2[10].ACLR
rst => breath_cnt2[11].ACLR
rst => breath_cnt2[12].ACLR
rst => breath_cnt2[13].ACLR
rst => breath_cnt2[14].ACLR
rst => breath_cnt2[15].ACLR
rst => breath_cnt2[16].ACLR
rst => breath_cnt2[17].ACLR
rst => breath_cnt2[18].ACLR
rst => breath_cnt2[19].ACLR
rst => breath_cnt2[20].ACLR
rst => breath_cnt2[21].ACLR
rst => breath_cnt2[22].ACLR
rst => breath_cnt2[23].ACLR
rst => breath_cnt2[24].ACLR
start => start_flag.CLK
seg_led_1[0] <= seg.PORTBDATAOUT
seg_led_1[1] <= seg.PORTBDATAOUT1
seg_led_1[2] <= seg.PORTBDATAOUT2
seg_led_1[3] <= seg.PORTBDATAOUT3
seg_led_1[4] <= seg.PORTBDATAOUT4
seg_led_1[5] <= seg.PORTBDATAOUT5
seg_led_1[6] <= seg.PORTBDATAOUT6
seg_led_1[7] <= <GND>
seg_led_1[8] <= <GND>
seg_led_2[0] <= seg.DATAOUT
seg_led_2[1] <= seg.DATAOUT1
seg_led_2[2] <= seg.DATAOUT2
seg_led_2[3] <= seg.DATAOUT3
seg_led_2[4] <= seg.DATAOUT4
seg_led_2[5] <= seg.DATAOUT5
seg_led_2[6] <= seg.DATAOUT6
seg_led_2[7] <= <GND>
seg_led_2[8] <= <GND>
set_0 => always3.IN0
set_0 => always3.IN0
set_0 => always3.IN0
set_0 => always3.IN0
set_1 => always3.IN1
set_1 => always3.IN1
set_1 => always3.IN1
set_1 => always3.IN1
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => cnt.OUTPUTSELECT
set_2 => clk_divided.OUTPUTSELECT
recount => zero_flag.OUTPUTSELECT
recount => cnt_ge.OUTPUTSELECT
recount => cnt_shi.OUTPUTSELECT
recount => cnt_shi.OUTPUTSELECT
recount => cnt_shi.OUTPUTSELECT
recount => cnt_shi.OUTPUTSELECT
recount => cnt_ge.OUTPUTSELECT
recount => cnt_ge.OUTPUTSELECT
recount => cnt_ge.OUTPUTSELECT
recount => cnt_ge.OUTPUTSELECT
recount => cnt_shi.OUTPUTSELECT
recount => cnt_shi.OUTPUTSELECT
recount => cnt_shi.OUTPUTSELECT
recount => cnt_shi.OUTPUTSELECT
recount => cnt_led.OUTPUTSELECT
recount => cnt_led.OUTPUTSELECT
recount => cnt_led.OUTPUTSELECT
recount => cnt_led.OUTPUTSELECT
recount => status_led_r.OUTPUTSELECT
recount => status_led_g.OUTPUTSELECT
recount => cnt_led[3].ADATA
recount => cnt_ge[0].ADATA
breath_led <= LessThan6.DB_MAX_OUTPUT_PORT_TYPE
status_led_r[0] <= status_led_r[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
status_led_g[0] <= status_led_g[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_led[0] <= led.DATAOUT
count_led[1] <= led.DATAOUT1
count_led[2] <= led.DATAOUT2
count_led[3] <= led.DATAOUT3
count_led[4] <= led.DATAOUT4
count_led[5] <= led.DATAOUT5
count_led[6] <= led.DATAOUT6
count_led[7] <= led.DATAOUT7


